import{r as s,o as e,c as a,a as o,w as n,F as l,b as r,d as t}from"./app.64a015cf.js";const i={},c=r('<h1 id="comecando" tabindex="-1"><a class="header-anchor" href="#comecando" aria-hidden="true">#</a> Começando</h1><blockquote><p>Olá! Recentemente migramos alguns documentos para adicionar novas páginas. Caso queira nos ajudar traduzindo essa página clique em &quot;Edit this page&quot; no final da página.</p></blockquote><p><code>asdf</code> installation involves:</p><ol><li>Instalando dependências</li><li>Instalando núcleo <code>asdf</code></li><li>Adicionando <code>asdf</code> ao seu shell</li><li>Instalar um plugin para cada ferramenta que deseja gerenciar</li><li>Instalar uma versão de ferramenta</li><li>Configurações globais e versões de projetos via <code>.tool-versions</code></li></ol><h2 id="_1-instalar-dependencias" tabindex="-1"><a class="header-anchor" href="#_1-instalar-dependencias" aria-hidden="true">#</a> 1. Instalar Dependências</h2><p><strong>Linux</strong>:</p><table><thead><tr><th>Gerenciador de pacotes</th><th>Comando</th></tr></thead><tbody><tr><td>Aptitude</td><td><code>sudo apt install curl git</code></td></tr><tr><td>DNF</td><td><code>sudo dnf install curl git</code></td></tr><tr><td>Pacman</td><td><code>sudo pacman -S curl git</code></td></tr><tr><td>Zypper</td><td><code>sudo zypper install curl git</code></td></tr></tbody></table><p><strong>macOS</strong>:</p><table><thead><tr><th>Gerenciador de pacotes</th><th>Comando</th></tr></thead><tbody><tr><td>Homebrew</td><td>Dependências seram instaladas automaticamente pelo Homebrew.</td></tr><tr><td>Spack</td><td><code>spack install coreutils curl git</code></td></tr></tbody></table><h2 id="_2-instalar-asdf" tabindex="-1"><a class="header-anchor" href="#_2-instalar-asdf" aria-hidden="true">#</a> 2. Instalar asdf</h2><p>Nos recomendamos instalação via Git, mesmo que existam outros métodos específicos:</p>',11),d=o("thead",null,[o("tr",null,[o("th",null,"Método"),o("th",null,"Comando")])],-1),p=o("tr",null,[o("td",null,"Git"),o("td",null,[o("code",null,"git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.1")])],-1),u=o("tr",null,[o("td",null,"Homebrew"),o("td",null,[o("code",null,"brew install asdf")])],-1),m=o("td",null,"Pacman",-1),h=o("code",null,"git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si",-1),g=t(" ou use sua preferência "),f={href:"https://wiki.archlinux.org/index.php/AUR_helpers",target:"_blank",rel:"noopener noreferrer"},b=t("AUR helper"),F=r('<h2 id="_3-adicionando-ao-seu-shell" tabindex="-1"><a class="header-anchor" href="#_3-adicionando-ao-seu-shell" aria-hidden="true">#</a> 3. Adicionando ao seu shell</h2><p>Existem muitas combinações diferentes de shells, sistemas operacionais e métodos de instalação, todos eles demonstrados aqui. Expanda as seleções abaixo que melhor se adequam ao seu sistema:</p><details class="custom-container details"><summary>Bash &amp; Git</summary><p>Adicione em seu <code>~/.bashrc</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;">.</span><span style="color:#F8F8F2;"> $HOME/.asdf/asdf.sh</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Os complementos precisam ser configurados manualmente em seu arquivo <code>.bashrc</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;">.</span><span style="color:#F8F8F2;"> $HOME/.asdf/completions/asdf.bash</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></details><details class="custom-container details"><summary>Bash &amp; Git (macOS)</summary><p>Caso esteja usando <strong>macOs Catalina ou mais recente</strong>, por padrão o <em>shell</em> é <strong>ZSH</strong>. Para voltar ao <em>Bash</em> siga as instruções do ZSH.</p><p>Adicione em seu <code>~/.bash_profile</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;">.</span><span style="color:#F8F8F2;"> $HOME/.asdf/asdf.sh</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Os complementos precisam ser configurados manualmente em seu arquivo <code>.bash_profile</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;">.</span><span style="color:#F8F8F2;"> $HOME/.asdf/completions/asdf.bash</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></details>',4),y={class:"custom-container details"},v=r('<summary>Bash &amp; Homebrew (macOS)</summary><p>Caso esteja usando <strong>macOs Catalina ou mais recente</strong>, por padrão o <em>shell</em> é <strong>ZSH</strong>. Para voltar ao <em>Bash</em> siga as instruções do ZSH.</p><p>Adicione <code>asdf.sh</code> ao seu <code>~/.bash_profile</code> usando:</p><div class="language-bash ext-sh"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;">echo</span><span style="color:#F8F8F2;"> -e </span><span style="color:#E6DB74;">&quot;\\n. $(brew --prefix asdf)/asdf.sh&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">&gt;&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;">/.bash_profile</span></span>\n<span class="line"></span></code></pre></div>',4),k=t("Os complementos precisam "),x={href:"https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash",target:"_blank",rel:"noopener noreferrer"},w=t("instruções de configuração do Homebrew"),_=t(" ou usando:"),H=r('<div class="language-bash ext-sh"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;">echo</span><span style="color:#F8F8F2;"> -e </span><span style="color:#E6DB74;">&quot;\\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">&gt;&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;">/.bash_profile</span></span>\n<span class="line"></span></code></pre></div>',1),S={class:"custom-container details"},j=r('<summary>Bash &amp; Pacman</summary><p>Adicione em seu <code>~/.bashrc</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;">.</span><span style="color:#F8F8F2;"> /opt/asdf-vm/asdf.sh</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',3),E={href:"https://wiki.archlinux.org/title/bash#Common_programs_and_options",target:"_blank",rel:"noopener noreferrer"},O=o("code",null,"bash-complementos",-1),z=t(" precisam ser instalado para os complementos funcionem."),D=r('<details class="custom-container details"><summary>Fish &amp; Git</summary><p>Adicione em seu <code>~/.config/fish/config.fish</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;">source</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;">/.asdf/asdf.fish</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Os complementos precisam ser configurados manualmente com esse comando:</p><div class="language-bash ext-sh"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">mkdir -p </span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;">/.config/fish/completions</span><span style="color:#F92672;">;</span><span style="color:#F8F8F2;"> and ln -s </span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;">/.asdf/completions/asdf.fish </span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;">/.config/fish/completions</span></span>\n<span class="line"></span></code></pre></div></details>',1),q={class:"custom-container details"},A=r('<summary>Fish &amp; Homebrew</summary><p>Adicione <code>asdf.fish</code> ao seu <code>~/.config/fish/config.fish</code> usando:</p><div class="language-bash ext-sh"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;">echo</span><span style="color:#F8F8F2;"> -e </span><span style="color:#E6DB74;">&quot;\\nsource &quot;</span><span style="color:#F8F8F2;">(brew --prefix asdf)</span><span style="color:#E6DB74;">&quot;/asdf.fish&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">&gt;&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;">/.config/fish/config.fish</span></span>\n<span class="line"></span></code></pre></div>',3),Z=t("Os complementos são "),C={href:"https://docs.brew.sh/Shell-Completion#configuring-completions-in-fish",target:"_blank",rel:"noopener noreferrer"},P=t("manipulados pelo Homebrew para o Fish shell"),$=t(". Legal!"),I=r('<details class="custom-container details"><summary>Fish &amp; Pacman</summary><p>Adicione em seu <code>~/.config/fish/config.fish</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;">source</span><span style="color:#F8F8F2;"> /opt/asdf-vm/asdf.fish</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Os complementos são automaticamente configurados na instalação feita pelo pacote AUR.</p></details>',1),G={class:"custom-container details"},M=r('<summary>ZSH &amp; Git</summary><p>Adicione em seu <code>~/.zshrc</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;">.</span><span style="color:#F8F8F2;"> $HOME/.asdf/asdf.sh</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',3),T=o("strong",null,"Ou",-1),B=t(" use ZSH Framework plugin descrito em "),R={href:"https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf",target:"_blank",rel:"noopener noreferrer"},N=t("asdf para oh-my-zsh"),W=t(" que irá realizar as configurações."),L=r('<p>Os complementos são configurados usando ZSH Framework <code>asdf</code> plugin ou através do arquivo <code>.zshrc</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;"># adicione em seu fpath</span></span>\n<span class="line"><span style="color:#F8F8F2;">fpath=(${ASDF_DIR}/completions $fpath)</span></span>\n<span class="line"><span style="color:#88846F;"># termine usando os comandos do ZSH&#39;s compinit</span></span>\n<span class="line"><span style="color:#F8F8F2;">autoload -Uz compinit </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> compinit</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>Caso tiver usando uma costumização de <code>compinit</code>, garanta que seu <code>compinit</code> esteja dentro do arquivo <code>asdf.sh</code></li><li>Caso tiver usando uma costumização de <code>compinit</code> e ZSH Framework, garanta que <code>compinit</code> esteja dentro do framework</li></ul><p><strong>Cuidado</strong></p><p>Caso tiver usando ZSH Framework em conjunto com <code>asdf</code>, talvez seja necessário atualizar os complementos de ZSH no <code>fpath</code>. Para atualizar Oh-My-ZSH asdf plugin, seja em https://github.com/ohmyzsh/ohmyzsh/pull/8837.</p>',5),U={class:"custom-container details"},V=r('<summary>ZSH &amp; Homebrew</summary><p>Adicione <code>asdf.sh</code> ao seu <code>~/.zshrc</code> usando:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;">echo</span><span style="color:#F8F8F2;"> -e </span><span style="color:#E6DB74;">&quot;\\n. $(brew --prefix asdf)/asdf.sh&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">&gt;&gt;</span><span style="color:#F8F8F2;"> ${ZDOTDIR</span><span style="color:#F92672;">:-</span><span style="color:#F8F8F2;">~}/.zshrc</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',3),Y=o("strong",null,"Ou",-1),J=t(" use o ZSH Framework plugin descrito em "),K={href:"https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf",target:"_blank",rel:"noopener noreferrer"},Q=t("asdf para oh-my-zsh"),X=t(" para concluir sua configuração."),ss=t("Os complementos são configurados pelo ZSH Framework "),es=o("code",null,"asdf",-1),as=t(" ou precisam "),os={href:"https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh",target:"_blank",rel:"noopener noreferrer"},ns=t("instruções de configuração do Homebrew"),ls=t(". Caso tiver usando ZSH Framework em conjunto com "),rs=o("code",null,"asdf",-1),ts=t(", talvez seja necessário atualizar os complementos de ZSH no "),is=o("code",null,"fpath",-1),cs=t(". Para atualizar Oh-My-ZSH asdf plugin, seja em "),ds={href:"https://github.com/ohmyzsh/ohmyzsh/pull/8837",target:"_blank",rel:"noopener noreferrer"},ps=t("ohmyzsh/ohmyzsh#8837"),us=t("."),ms={class:"custom-container details"},hs=r('<summary>ZSH &amp; Pacman</summary><p>Adicione em seu <code>~/.zshrc</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;">.</span><span style="color:#F8F8F2;"> /opt/asdf-vm/asdf.sh</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',3),gs=t("Os complementos são colocados em um local escolhido pelo ZHS, para mais "),fs={href:"https://wiki.archlinux.org/index.php/zsh#Command_completion",target:"_blank",rel:"noopener noreferrer"},bs=t("ZSH deve ser usado para configurações dos complementos"),Fs=t("."),ys=r('<p>Scripts <code>asdf</code> precisa dos recursos <strong>AFETER</strong> em seu <code>$PATH</code> e <strong>AFTER</strong> precisa estar em seu framework (oh-my-zsh etc).</p><p>Reinicie seu shell para que as alterações <code>PATH</code> tenham efeito. Abrir uma nova guia do terminal geralmente resolve.</p><h2 id="_4-instalar-um-plugin" tabindex="-1"><a class="header-anchor" href="#_4-instalar-um-plugin" aria-hidden="true">#</a> 4. Instalar um Plugin</h2>',3),vs=t("Para efeitos de demonstração, instalaremos e configuraremos "),ks={href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"},xs=t("Node.js"),ws=t(" via plugin"),_s={href:"https://github.com/asdf-vm/asdf-nodejs/",target:"_blank",rel:"noopener noreferrer"},Hs=o("code",null,"asdf-nodejs",-1),Ss=t("."),js=r('<h3 id="dependencias-do-plugin" tabindex="-1"><a class="header-anchor" href="#dependencias-do-plugin" aria-hidden="true">#</a> Dependências do Plugin</h3><p>Each plugin has dependencies so we need to check the plugin repo where they should be listed. For <code>asdf-nodejs</code> they are:</p><table><thead><tr><th>OS</th><th>Dependency Installation</th></tr></thead><tbody><tr><td>Linux (Debian)</td><td><code>apt-get install dirmngr gpg curl gawk</code></td></tr><tr><td>macOS</td><td><code>brew install gpg gawk</code></td></tr></tbody></table><p>We should install dependencies first as some Plugins have post-install hooks.</p><h3 id="install-the-plugin" tabindex="-1"><a class="header-anchor" href="#install-the-plugin" aria-hidden="true">#</a> Install the Plugin</h3><div class="language-bash ext-sh"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git</span></span>\n<span class="line"></span></code></pre></div><h2 id="_5-install-a-version" tabindex="-1"><a class="header-anchor" href="#_5-install-a-version" aria-hidden="true">#</a> 5. Install a Version</h2><p>Now we have a plugin for Node.js we can install a version of the tool.</p><p>We can observer which versions are available with <code>asdf list all nodejs</code> or a subset of versions with <code>asdf list all nodejs 14</code>.</p><p>We will just install the <code>latest</code> available version:</p><div class="language-bash ext-sh"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">asdf install nodejs latest</span></span>\n<span class="line"></span></code></pre></div><div class="custom-container tip"><p class="custom-container-title">Note</p><p><code>asdf</code> enforces exact versions. <code>latest</code> is a helper throughout <code>asdf</code> that will resolve to the actual version number at the time of execution.</p></div><h2 id="_6-set-a-version" tabindex="-1"><a class="header-anchor" href="#_6-set-a-version" aria-hidden="true">#</a> 6. Set a Version</h2><p><code>asdf</code> performs a version lookup of a tool in all <code>.tool-versions</code> files from the current working directory up to the <code>$HOME</code> directory. The lookup occurs just-in-time when you execute a tool that <code>asdf</code> manages.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Without a version listed for a tool execution of the tool will <strong>error</strong>. <code>asdf current</code> will show you the tool &amp; version resolution, or absence of, from your current directory so you can observe which tools will fail to execute.</p></div><h3 id="global" tabindex="-1"><a class="header-anchor" href="#global" aria-hidden="true">#</a> Global</h3><p>Global defaults are managed in <code>$HOME/.tool-versions</code>. Set a global version with:</p><div class="language-bash ext-sh"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">asdf global nodejs latest</span></span>\n<span class="line"></span></code></pre></div><p><code>$HOME/.tool-versions</code> will then look like:</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">nodejs 16.5.0\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',20),Es=t("Some OSs already have tools installed that are managed by the system and not "),Os=o("code",null,"asdf",-1),zs=t(", "),Ds=o("code",null,"python",-1),qs=t(" is a common example. You need to tell "),As=o("code",null,"asdf",-1),Zs=t(" to pass the management back to the system. The "),Cs=t("Versions reference section"),Ps=t(" will guide you."),$s=r('<h3 id="local" tabindex="-1"><a class="header-anchor" href="#local" aria-hidden="true">#</a> Local</h3><p>Local versions are defined in the <code>$PWD/.tool-versions</code> file (your current working directory). Usually, this will be the Git respository for a project. When in your desired directory execute:</p><div class="language-bash ext-sh"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">asdf </span><span style="color:#F92672;">local</span><span style="color:#F8F8F2;"> nodejs latest</span></span>\n<span class="line"></span></code></pre></div><p><code>$PWD/.tool-versions</code> will then look like:</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">nodejs 16.5.0\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="using-existing-tool-version-files" tabindex="-1"><a class="header-anchor" href="#using-existing-tool-version-files" aria-hidden="true">#</a> Using Existing Tool Version Files</h3><p><code>asdf</code> supports the migration from existing version files from other version managers. Eg: <code>.ruby-version</code> for the case of <code>rbenv</code>. This is supported on a per-plugin basis.</p>',7),Is={href:"https://github.com/asdf-vm/asdf-nodejs/",target:"_blank",rel:"noopener noreferrer"},Gs=o("code",null,"asdf-nodejs",-1),Ms=t(" supports this via both "),Ts=o("code",null,".nvmrc",-1),Bs=t(" and "),Rs=o("code",null,".node-version",-1),Ns=t(" files. To enable this, add the following to your "),Ws=o("code",null,"asdf",-1),Ls=t(" configuration file "),Us=o("code",null,"$HOME/.asdfrc",-1),Vs=t(":"),Ys=r('<div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">legacy_version_file = yes\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',1),Js=t("See the "),Ks=t("configuration"),Qs=t(" reference page for more config options."),Xs=r('<h2 id="setup-complete" tabindex="-1"><a class="header-anchor" href="#setup-complete" aria-hidden="true">#</a> Setup Complete!</h2><p>That completes the initial setup of <code>asdf</code> 🎉 You can now manage <code>nodejs</code> versions for your project. Follow similar steps for each type of tool in your project!</p><p><code>asdf</code> has a many more commands to become familiar with, you can see them all by running <code>asdf --help</code> or <code>asdf</code>. The core of the commands are broken into three categories:</p>',3),se=t("core "),ee=o("code",null,"asdf",-1),ae=t("plugins"),oe=t("versions (of tools)");i.render=function(r,t){const i=s("OutboundLink"),ne=s("RouterLink");return e(),a(l,null,[c,o("table",null,[d,o("tbody",null,[p,u,o("tr",null,[m,o("td",null,[h,g,o("a",f,[b,o(i)])])])])]),F,o("details",y,[v,o("p",null,[k,o("a",x,[w,o(i)]),_]),H]),o("details",S,[j,o("p",null,[o("a",E,[O,o(i)]),z])]),D,o("details",q,[A,o("p",null,[Z,o("a",C,[P,o(i)]),$])]),I,o("details",G,[M,o("p",null,[T,B,o("a",R,[N,o(i)]),W]),L]),o("details",U,[V,o("p",null,[Y,J,o("a",K,[Q,o(i)]),X]),o("p",null,[ss,es,as,o("a",os,[ns,o(i)]),ls,rs,ts,is,cs,o("a",ds,[ps,o(i)]),us])]),o("details",ms,[hs,o("p",null,[gs,o("a",fs,[bs,o(i)]),Fs])]),ys,o("p",null,[vs,o("a",ks,[xs,o(i)]),ws,o("a",_s,[Hs,o(i)]),Ss]),js,o("p",null,[Es,Os,zs,Ds,qs,As,Zs,o(ne,{to:"/pt-br/manage/versions.html"},{default:n((()=>[Cs])),_:1}),Ps]),$s,o("p",null,[o("a",Is,[Gs,o(i)]),Ms,Ts,Bs,Rs,Ns,Ws,Ls,Us,Vs]),Ys,o("p",null,[Js,o(ne,{to:"/pt-br/manage/configuration.html"},{default:n((()=>[Ks])),_:1}),Qs]),Xs,o("ul",null,[o("li",null,[o(ne,{to:"/pt-br/manage/core.html"},{default:n((()=>[se,ee])),_:1})]),o("li",null,[o(ne,{to:"/pt-br/manage/plugins.html"},{default:n((()=>[ae])),_:1})]),o("li",null,[o(ne,{to:"/pt-br/manage/versions.html"},{default:n((()=>[oe])),_:1})])])],64)};export default i;
